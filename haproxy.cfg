#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats
ssl-default-bind-ciphers PROFILE=SYSTEM
ssl-default-server-ciphers PROFILE=SYSTEM

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
#frontend  main *:5000
#    acl url_static       path_beg       -i /static /images /javascript /stylesheets
#    acl url_static       path_end       -i .jpg .gif .png .css .js

#    use_backend static          if url_static
#    default_backend             app

#---------------------------------------------------------------------
# static backend for serving up images, stylesheets and such
#---------------------------------------------------------------------
#backend static
#    balance     roundrobin
#    server      static 127.0.0.1:4331 check

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
#backend app
#    balance     roundrobin
#    server  app1 127.0.0.1:5001 check
#    server  app2 127.0.0.1:5002 check
#    server  app3 127.0.0.1:5003 check
#    server  app4 127.0.0.1:5004 check
#OpenShift
listen stats
    bind :9000
    mode http
    stats enable
    stats uri /
	#stats hide-version
    stats auth admin:password

frontend openshift-api-server
    bind *:6443
    default_backend openshift-api-server-be
    mode tcp
    option tcplog
#    option forwardfor

backend openshift-api-server-be
    balance source
    mode tcp
#    option forwardfor
#    server bootstrap.ocp-cluster 172.20.10.130:6443 check
    server control-plane-0.ocp-cluster 172.20.10.131:6443 check
    server control-plane-1.ocp-cluster 172.20.10.132:6443 check
    server control-plane-2.ocp-cluster 172.20.10.133:6443 check

frontend machine-config-server
    bind *:22623
    default_backend machine-config-server-be
    mode tcp
#    option forwardfor
    option tcplog

backend machine-config-server-be
    balance source
    mode tcp
#    option forwardfor
#    server bootstrap.ocp-cluster 172.20.10.130:22623 check
    server control-plane-0.ocp-cluster 172.20.10.131:22623 check
    server control-plane-1.ocp-cluster 172.20.10.132:22623 check
    server control-plane-2 172.20.10.133:22623 check

frontend ingress-http
    bind *:80
    default_backend ingress-http-be
    mode tcp
    option tcplog
#    option forwardfor

backend ingress-http-be
    balance source
    mode tcp
#    option forwardfor
    server compute-0.ocp-cluster.openshift.local 172.20.10.134:80 check
    server compute-1.ocp-cluster.openshift.local 172.20.10.135:80 check

frontend ingress-https
    bind *:443
    default_backend ingress-https-be
    mode tcp
    option tcplog
#    option forwardfor

backend ingress-https-be
    balance source
    mode tcp
#    option forwardfor
    server compute-0.ocp-cluster.openshift.local 172.20.10.134:443 check
    server compute-1.ocp-cluster.openshift.local 172.20.10.135:443 check
